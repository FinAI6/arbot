version: '3.8'

services:
  arbot:
    build: .
    container_name: arbot
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - DATABASE_PATH=/app/data/arbot.db
      - LOG_LEVEL=INFO
      - TRADING_MODE=simulation
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config.json:/app/config.json:ro
    networks:
      - arbot-network
    depends_on:
      - redis
      - postgres
    command: python main.py --mode ui

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: arbot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - arbot-network

  # Optional: PostgreSQL for advanced database needs
  postgres:
    image: postgres:15-alpine
    container_name: arbot-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=arbot
      - POSTGRES_USER=arbot
      - POSTGRES_PASSWORD=arbot_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - arbot-network

  # Optional: Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: arbot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - arbot-network

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: arbot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - arbot-network

volumes:
  redis_data:
  postgres_data:
  grafana_data:
  prometheus_data:

networks:
  arbot-network:
    driver: bridge